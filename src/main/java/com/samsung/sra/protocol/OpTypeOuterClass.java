// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: op_type.proto

package com.samsung.sra.protocol;

public final class OpTypeOuterClass {
  private OpTypeOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code com.samsung.sra.protocol.OpType}
   */
  public enum OpType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>COUNT = 1;</code>
     */
    COUNT(1),
    /**
     * <code>SUM = 2;</code>
     */
    SUM(2),
    /**
     * <code>BLOOM = 3;</code>
     */
    BLOOM(3),
    /**
     * <code>CMS = 4;</code>
     */
    CMS(4),
    /**
     * <code>MAX = 5;</code>
     */
    MAX(5),
    /**
     * <code>FREQ = 6;</code>
     */
    FREQ(6),
    ;

    /**
     * <code>COUNT = 1;</code>
     */
    public static final int COUNT_VALUE = 1;
    /**
     * <code>SUM = 2;</code>
     */
    public static final int SUM_VALUE = 2;
    /**
     * <code>BLOOM = 3;</code>
     */
    public static final int BLOOM_VALUE = 3;
    /**
     * <code>CMS = 4;</code>
     */
    public static final int CMS_VALUE = 4;
    /**
     * <code>MAX = 5;</code>
     */
    public static final int MAX_VALUE = 5;
    /**
     * <code>FREQ = 6;</code>
     */
    public static final int FREQ_VALUE = 6;


    @Override
    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @Deprecated
    public static OpType valueOf(int value) {
      return forNumber(value);
    }

    public static OpType forNumber(int value) {
      switch (value) {
        case 1: return COUNT;
        case 2: return SUM;
        case 3: return BLOOM;
        case 4: return CMS;
        case 5: return MAX;
        case 6: return FREQ;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<OpType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        OpType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<OpType>() {
            @Override
            public OpType findValueByNumber(int number) {
              return OpType.forNumber(number);
            }
          };

    @Override
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    @Override
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.samsung.sra.protocol.OpTypeOuterClass.getDescriptor().getEnumTypes().get(0);
    }

    private static final OpType[] VALUES = values();

    public static OpType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private OpType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:com.samsung.sra.protocol.OpType)
  }


  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\rop_type.proto\022\030com.samsung.sra.protoco" +
      "l*C\n\006OpType\022\t\n\005COUNT\020\001\022\007\n\003SUM\020\002\022\t\n\005BLOOM" +
      "\020\003\022\007\n\003CMS\020\004\022\007\n\003MAX\020\005\022\010\n\004FREQ\020\006B\032\n\030com.sa" +
      "msung.sra.protocol"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          @Override
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
